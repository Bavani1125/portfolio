# Portfolio Application with Authentication

A modern, responsive portfolio application built with Flask and React, featuring user authentication and dynamic content management.

## 🚀 Tech Stack

### Backend
- **Flask** - Python web framework
- **SQLite** - Local database
- **SQLAlchemy** - ORM for database management
- **Flask-Login** - User session management
- **Flask-Mail** - Email functionality for password reset
- **Flask-WTF** - Form handling and validation
- **Werkzeug** - Password hashing and security
- **Python-dotenv** - Environment variable management

### Frontend
- **React 18** - UI library
- **TypeScript** - Type-safe JavaScript
- **Tailwind CSS** - Utility-first CSS framework
- **Vite** - Next-generation frontend tooling
- **Lucide React** - Beautiful, consistent icons

## ✨ Features

### Authentication
- User registration with email verification
- Secure login system
- Password reset functionality
- Profile management

### Portfolio
- Customizable user profiles
- Work experience section
- Education history
- Skills showcase
- Project portfolio
- Certifications display
- Contact form

### Dashboard
- User-friendly admin interface
- Content management
- Portfolio preview
- Profile statistics

## 🛠️ Setup & Installation

1. Clone the repository
```bash
git clone <repository-url>
cd portfolio-app
```

2. Install Python dependencies
```bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install -r requirements.txt
```

3. Install Node.js dependencies
```bash
npm install
```

4. Set up environment variables
Create a `.env` file in the root directory:
```
SECRET_KEY=your-secret-key
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password
```

5. Initialize the database
```bash
python
>>> from app import create_app, db
>>> app = create_app()
>>> with app.app_context():
...     db.create_all()
```

6. Start the development server
```bash
npm run dev  # Frontend
python run.py  # Backend
```

## 📁 Project Structure

```
portfolio-app/
├── app/
│   ├── routes/
│   │   ├── auth.py
│   │   ├── main.py
│   │   └── portfolio.py
│   ├── static/
│   │   ├── css/
│   │   ├── js/
│   │   └── img/
│   ├── templates/
│   │   ├── auth/
│   │   ├── main/
│   │   └── portfolio/
│   ├── models.py
│   └── forms.py
├── src/
│   ├── components/
│   ├── App.tsx
│   └── main.tsx
└── config.py
```

## 🔐 Security Features

- Password hashing using Werkzeug
- CSRF protection
- Secure session management
- Input validation
- XSS prevention
- SQL injection protection

## 🎨 UI/UX Features

- Responsive design
- Dark mode support
- Smooth animations
- Modern, clean interface
- Accessible components
- Mobile-first approach

## 📝 License

MIT License - feel free to use this project for personal or commercial purposes.

## 🤝 Contributing

Contributions are welcome! Please feel free to submit a Pull Request.